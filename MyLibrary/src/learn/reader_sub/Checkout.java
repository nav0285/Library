package learn.reader_sub;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import learn.*;
/**
 *
 * @author Naveed
 */
public class Checkout extends javax.swing.JFrame {
    int reader_id;
    private Connection connect = null;
    private Statement statement = null;
    private PreparedStatement preparedStatement = null;
    private ResultSet resultSet = null;
    JOptionPane op = new JOptionPane();
    JDialog dia = null;
    /**
     * Creates new form Checkout
     */
    public Checkout() {
        initComponents();
        addBranch();
    }
    public Checkout(int r) {
        initComponents();
        reader_id = r;
        addBranch();
    }
    private void addBranch(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager
          .getConnection("jdbc:mysql://localhost/library?"
              + "user=name&password=password");
            statement = connect.createStatement();
            preparedStatement = connect.prepareStatement("select name from branch;");
            resultSet = preparedStatement.executeQuery();
            while(resultSet.next()){
                String name = resultSet.getString("name");
                branch_name.addItem(name);
            }
        
        }catch(Exception e){
            
        }
    }
    private int getBranchId(String name){
        int i=0;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager
          .getConnection("jdbc:mysql://localhost/library?"
              + "user=name&password=password");
            statement = connect.createStatement();
            preparedStatement = connect.prepareStatement("select branch_id from branch "
                    + "where name='"+name+"';");
            resultSet = preparedStatement.executeQuery();
           
            while(resultSet.next()){
                i = resultSet.getInt("branch_id");
            }
        
        }catch(Exception e){
            
        }
        return i;
    }
    private void setCopy(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager
          .getConnection("jdbc:mysql://localhost/library?"
              + "user=name&password=password");
            statement = connect.createStatement();
            
            preparedStatement = connect.prepareStatement("update copy set copies=copies-1 "
                    + "where branch_id="+getBranchId(branch_name.getSelectedItem().toString())+" "
                    + "and isbn=(select isbn from book where book_id="+book_id.getText()+");");
            preparedStatement.executeUpdate();
            preparedStatement = connect.prepareStatement("update book set available=0 where "
                    + "book_id="+book_id.getText()+";");
            preparedStatement.executeUpdate();            
        }catch(Exception e){
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        book_id = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        check_out = new javax.swing.JButton();
        branch_name = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Check out");

        jLabel2.setText("Book Id :");

        jLabel4.setText("Branch :");

        check_out.setText("Check Out");
        check_out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_outActionPerformed(evt);
            }
        });

        branch_name.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(book_id, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(branch_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(check_out)
                .addGap(146, 146, 146))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(book_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(branch_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(check_out)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void check_outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_outActionPerformed
        int b_id = getBranchId(branch_name.getSelectedItem().toString());
        java.util.Date utilDate = new java.util.Date();
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
        try{
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager
          .getConnection("jdbc:mysql://localhost/library?"
              + "user=name&password=password");
            statement = connect.createStatement();
            preparedStatement = connect.prepareStatement("insert into borrow(reader_id, book_id, "
                    + "branch_id, borrow_date) values(?, ?, ?, ?);");
            preparedStatement.setInt(1, reader_id);
            preparedStatement.setInt(2, Integer.parseInt(book_id.getText()));
            preparedStatement.setInt(3, b_id);
            preparedStatement.setDate(4, sqlDate);
            preparedStatement.executeUpdate();
            setCopy();
            op.setMessage(book_id.getText()+" has to be returned in 15 days. Otherwise a fine"
                    + " of 10 cents is collected per day.");
            op.setMessageType(1);
            dia = op.createDialog("Success");
            dia.setVisible(true);
            dispose();
            Reader_menu rf = new Reader_menu(reader_id);
            rf.setVisible(true);
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_check_outActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Checkout().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField book_id;
    private javax.swing.JComboBox branch_name;
    private javax.swing.JButton check_out;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
